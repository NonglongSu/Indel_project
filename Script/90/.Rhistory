library(tidyverse)
.libPaths()
.libPaths(c("~/R/x86_64-pc-linux-gnu-library/4.0",.libPaths()))
q()
#Data analysis of 90 species
suppressWarnings(library(matlib))
suppressPackageStartupMessages(library(Biostrings))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(seqinr))
suppressPackageStartupMessages(library(R.utils))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(Matrix))
suppressPackageStartupMessages(library(expm))
suppressPackageStartupMessages(library(SQUAREM))
suppressPackageStartupMessages(library(jsonlite))
suppressPackageStartupMessages(library(matlib))
setwd("~/Dropbox (ASU)/Indel_project/Script/90")
#######################PARTI:func setup
#create 64*64 N->N matrix
countN = function(file){
seq  = readDNAStringSet(file, format="fasta")
seqs = str_split(seq,'')
#codon trans matrix
nmat = matrix(0,61,61)
i=1
while(i<width(seq)[1]) {
c1 = paste0(seqs[[1]][i:(i+2)], collapse = '')
c2 = paste0(seqs[[2]][i:(i+2)], collapse = '')
coor1 = which(codonstrs %in% c1)
coor2 = which(codonstrs %in% c2)
nmat[coor1,coor2] = nmat[coor1,coor2] + 1
i=i+3
}
print(sum(nmat)*3)
return(nmat)
}
#4*4 GTR matrix
GTR = function(Si, pai){
r1 = matrix(0, 4, 4)
r1[lower.tri(r1)] = Si
r  = r1 + t(r1)
r  = t(r*pai)
diag(r) = -rowSums(r)
return(r)
}
#Construct a 61*61 MG94 matrix
MG94 = function(g, oga, cod){
R  = matrix(0, 61, 61)
for (i in 1:61) {
for (j in 1:61) {
if(i == j){
R[i, j] = 0
}else if(sum(cod[i, ] != cod[j, ]) > 1){#more than 1 nucleotide changes
R[i, j] = 0
}else{
if(codonstrs[j] %in% syn[[codonstrs[i]]]){#syn_subs
w = 1
}else{#nonsyn_subs
w = oga
}
pos = which(cod[i, ] != cod[j, ])
x   = which(DNA_BASES == cod[i, pos])
y   = which(DNA_BASES == cod[j, pos])
R[i, j] = w * g[x, y]
}
}
}
diag(R) = -rowSums(R)
return(R)
}
#Log-likelihood
LL = function(theta){
rmat  = GTR(theta[1:6], f0)
Rmat  = MG94(rmat, theta[7], cod)
llt = sum(log(expm(Rmat)*cf0)*dat1)
return(llt)
}
